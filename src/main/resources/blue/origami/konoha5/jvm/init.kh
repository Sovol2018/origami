# jvm/init.kh

Bool       = boolean
Byte       = byte
Int        = int
Int64      = long
Float      = double
String     = String

# Bool
true:Bool       = true
false:Bool      = false

==:Bool:Bool:Bool      = S|blue/origami/transpiler/asm/APIs|eq
!=:Bool:Bool:Bool      = S|blue/origami/transpiler/asm/APIs|ne
&&:Bool:Bool:Bool      = X|band
||:Bool:Bool:Bool      = X|bor
!:Bool:Bool            = S|blue/origami/transpiler/asm/APIs|not
assert:Bool:()!!       = S|blue/origami/transpiler/asm/APIs|testAssert

#Int 
0:Int            = %d
+:Int:Int        = -
-:Int:Int        = O|ineg
+:Int:Int:Int    = O|iadd
-:Int:Int:Int    = O|isub
*:Int:Int:Int    = O|imul
/:Int:Int:Int    = O|idiv
%:Int:Int:Int    = O|irem

==:Int:Int:Bool  = S|blue/origami/transpiler/asm/APIs|eq
!=:Int:Int:Bool  = S|blue/origami/transpiler/asm/APIs|ne
<:Int:Int:Bool   = S|blue/origami/transpiler/asm/APIs|lt
>:Int:Int:Bool   = S|blue/origami/transpiler/asm/APIs|gt
<=:Int:Int:Bool  = S|blue/origami/transpiler/asm/APIs|lte
>=:Int:Int:Bool  = S|blue/origami/transpiler/asm/APIs|gte

<<:Int:Int:Int   = O|ishl
>>:Int:Int:Int   = O|ishr
&&:Int:Int:Int   = O|iand
||:Int:Int:Int   = O|ior
^^:Int:Int:Int   = O|ixor
~:Int:Int        = S|blue/origami/transpiler/asm/APIs|cmpl
||:Int:Int       = S|java/lang/Math|abs

# Float
0:Float                = %f
Int=>Float             = O|i2d
Float->Int             = O|d2i
+:Float:Float          = -
-:Float:Float          = O|dneg
+:Float:Float:Float    = O|dadd
-:Float:Float:Float    = O|dsub
*:Float:Float:Float    = O|dmul
/:Float:Float:Float    = O|ddiv
%:Float:Float:Float    = O|drem

==:Float:Float:Bool  = S|blue/origami/transpiler/asm/APIs|eq
!=:Float:Float:Bool  = S|blue/origami/transpiler/asm/APIs|ne
<:Float:Float:Bool   = S|blue/origami/transpiler/asm/APIs|lt
>:Float:Float:Bool   = S|blue/origami/transpiler/asm/APIs|gt
<=:Float:Float:Bool  = S|blue/origami/transpiler/asm/APIs|lte
>=:Float:Float:Bool  = S|blue/origami/transpiler/asm/APIs|gte
^:Float:Float:Float  = S|java/lang/Math|pow
||:Float:Int         = S|java/lang/Math|abs
rand:Float@          = S|java/lang/Math|random

#String
char->String           = O|blue/origami/transpiler/asm/APIs|toch
String--->Int          = S|blue/origami/transpiler/asm/APIs|toint
String--->Float        = S|blue/origami/transpiler/asm/APIs|todouble
Int-->String           = S|blue/origami/transpiler/asm/APIs|toString
Float-->String         = S|blue/origami/transpiler/asm/APIs|toString

||:String:Int          = S|blue/origami/transpiler/asm/APIs|size
==:String:String:Bool  = S|blue/origami/transpiler/asm/APIs|eq
!=:String:String:Bool  = S|blue/origami/transpiler/asm/APIs|ne
<:String:String:Bool   = S|blue/origami/transpiler/asm/APIs|lt
>:String:String:Bool   = S|blue/origami/transpiler/asm/APIs|gt
<=:String:String:Bool  = S|blue/origami/transpiler/asm/APIs|lte
>=:String:String:Bool  = S|blue/origami/transpiler/asm/APIs|gte
println:String:()@     = S|blue/origami/transpiler/asm/APIs|p


## a*, a[], Stream[a]

||:a*:Int                         = V|blue/origami/konoha5/List$|size
[]:a*:Int:a                       = V|blue/origami/konoha5/List$|geti

a*=>Stream[a]                            = V|blue/origami/konoha5/List$|stream
Stream[a]=>a*                            = S|blue/origami/konoha5/List$|list

||:a[]:Int                         = V|blue/origami/konoha5/List$|size
[]:a[]:Int:a                       = V|blue/origami/konoha5/List$|geti
[]=:a[]:Int:a:()                   = V|blue/origami/konoha5/List$|seti
push:a[]:a:()                      = V|blue/origami/konoha5/List|push
pop:a[]:a                          = V|blue/origami/konoha5/List|pop

a[]=>Stream[a]                           = V|blue/origami/konoha5/List$|stream
Stream[a]=>a[]                           = S|blue/origami/konoha5/List$|list

foreach:Stream[a]:a->():()               = S|blue/origami/konoha5/List$|forEach
filter:Stream[a]:a->Bool:Stream[a]       = S|blue/origami/konoha5/List$|filter
map:Stream[a]:a->b:Stream[b]             = S|blue/origami/konoha5/List$|map
map:Stream[a]:a->Int:Stream[Int]         = S|blue/origami/konoha5/List$|map
reduce:Stream[a]:a:a,a->a:a              = S|blue/origami/konoha5/List$|reduce

## Int*, Int[], Stream[Int]

||:Int*:Int                        = V|blue/origami/konoha5/List$Int|size
[]:Int*:Int:Int                    = V|blue/origami/konoha5/List$Int|geti

Int*=>Stream[Int]                  = V|blue/origami/konoha5/List$Int|stream
Stream[Int]=>Int*                  = S|blue/origami/konoha5/List$Int|list

||:Int[]:Int                       = V|blue/origami/konoha5/List$Int|size
[]:Int[]:Int:Int                   = V|blue/origami/konoha5/List$Int|geti
[]=:Int[]:Int:Int:()               = V|blue/origami/konoha5/List$Int|seti
push:Int[]:Int:()                  = V|blue/origami/konoha5/List$Int|push
pop:Int[]:Int                      = V|blue/origami/konoha5/List$Int|pop

Int[]=>Stream[Int]                 = V|blue/origami/konoha5/List$Int|stream
Stream[Int]=>Int[]                 = S|blue/origami/konoha5/List$Int|list

foreach:Stream[Int]:Int->():()               = S|blue/origami/konoha5/List$Int|forEach
filter:Stream[Int]:Int->Bool:Stream[Int]     = S|blue/origami/konoha5/List$Int|filter
map:Stream[Int]:Int->a:Stream[a]             = S|blue/origami/konoha5/List$Int|map
map:Stream[Int]:Int->Int:Stream[Int]         = S|blue/origami/konoha5/List$Int|map
map:Stream[Int]:Int->Float:Stream[Float]     = S|blue/origami/konoha5/List$Int|map
reduce:Stream[Int]:Int:Int,Int->Int:Int      = S|blue/origami/konoha5/List$Int|reduce

# Dict[a]
||:Dict[a]:Int                       = V|blue/origami/konoha5/Dict$|size
[]:Dict[a]:String:a?                 = V|blue/origami/konoha5/Dict$|get
Dict[a]->String*                     = V|blue/origami/konoha5/Dict$|keys

# Dict'[a]
||:Dict'[a]:Int                      = V|blue/origami/konoha5/Dict|size
[]:Dict'[a]:String:a?                = V|blue/origami/konoha5/Dict|get
Dict'[a]->String*                    = V|blue/origami/konoha5/Dict|keys
[]=:Dict'[a]:String:a:()             = V|blue/origami/konoha5/Dict|set


#Option
Some:a:a?                = S|blue/origami/transpiler/asm/APIs|nop
a?--->a                  = S|blue/origami/transpiler/asm/APIs|toobj
isSome?:a?:Bool          = S|blue/origami/transpiler/asm/APIs|isSome
isNone?:a?:Bool          = S|blue/origami/transpiler/asm/APIs|isNone
flatMap:a?:a->b?:b?      = S|blue/origami/transpiler/asm/APIs|flatMap

Some:Int:Int?            = S|blue/origami/transpiler/asm/APIs|box
#exist:Int?:Bool         = S|blue/origami/transpiler/asm/APIs|exist
Int?--->Int              = S|blue/origami/transpiler/asm/APIs|toint
forEach:Int?:Int->():()  = S|blue/origami/transpiler/asm/APIs|forEach
map:Int?:Int->Int:Int?   = S|blue/origami/transpiler/asm/APIs|map
flatMap:Int?:Int->a?:a?  = S|blue/origami/transpiler/asm/APIs|flatMap


# MathLib
sin:Float:Float                      = S|java/lang/Math|sin
cos:Float:Float                      = S|java/lang/Math|cos
tan:Float:Float                      = S|java/lang/Math|tan
